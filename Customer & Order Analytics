#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
AND orderID <> ''
;

#2. How many of those orders were for an iPhone? 
SELECT COUNT(Product) FROM BIT_DB.JanSales
 WHERE Product = 'iPhone'
;

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales f
ON c.order_id = f.orderID
WHERE orderID <> 'Order ID'
AND length(orderid) = 6
;

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, MIN(price) FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price ASC LIMIT 1
;

#5. What is the total revenue for each product sold in January?
SELECT product, ROUND(SUM(quantity)*price,2) AS revenue
FROM BIT_DB.JanSales
WHERE product <> ''
AND product <> 'Product'
GROUP BY product
;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity) AS How_Many_Sold_Feb, SUM(Quantity) * price AS Revenue 
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product
;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(DISTINCT acctnum), ROUND(AVG(Quantity * price),2) as avg_amt_spent FROM BIT_DB.customers c
LEFT JOIN BIT_DB.FebSales f
ON c.order_id = f.orderID
WHERE f.Quantity > 2
AND length(order_id) = 6
AND order_id <> 'Order ID'
;

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity) FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product
;
